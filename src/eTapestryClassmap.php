<?php

namespace BurgerDigital\eTapestry;

use BurgerDigital\eTapestry\Type;
use Phpro\SoapClient\Soap\ClassMap\ClassMapCollection;
use Phpro\SoapClient\Soap\ClassMap\ClassMap;

class eTapestryClassmap
{

    public static function getCollection() : \Phpro\SoapClient\Soap\ClassMap\ClassMapCollection
    {
        return new ClassMapCollection([
            new ClassMap('Account', Type\Account::class),
            new ClassMap('DefinedValue', Type\DefinedValue::class),
            new ClassMap('Phone', Type\Phone::class),
            new ClassMap('SocialMediaProfile', Type\SocialMediaProfile::class),
            new ClassMap('Gift', Type\Gift::class),
            new ClassMap('Attachment', Type\Attachment::class),
            new ClassMap('GeneratedReceipt', Type\GeneratedReceipt::class),
            new ClassMap('OrderDetail', Type\OrderDetail::class),
            new ClassMap('DiscountApplied', Type\DiscountApplied::class),
            new ClassMap('OrderInfo', Type\OrderInfo::class),
            new ClassMap('SoftCredit', Type\SoftCredit::class),
            new ClassMap('Valuable', Type\Valuable::class),
            new ClassMap('CCP', Type\CCP::class),
            new ClassMap('Bond', Type\Bond::class),
            new ClassMap('Buckaroo', Type\Buckaroo::class),
            new ClassMap('Cash', Type\Cash::class),
            new ClassMap('Check', Type\Check::class),
            new ClassMap('CreditCard', Type\CreditCard::class),
            new ClassMap('ElectronicFundsTransfer', Type\ElectronicFundsTransfer::class),
            new ClassMap('InKind', Type\InKind::class),
            new ClassMap('Insurance', Type\Insurance::class),
            new ClassMap('RealEstate', Type\RealEstate::class),
            new ClassMap('Stock', Type\Stock::class),
            new ClassMap('Payment', Type\Payment::class),
            new ClassMap('Contact', Type\Contact::class),
            new ClassMap('Declaration', Type\Declaration::class),
            new ClassMap('Disbursement', Type\Disbursement::class),
            new ClassMap('LoginCredentialsRequest', Type\LoginCredentialsRequest::class),
            new ClassMap('SearchCriteria', Type\SearchCriteria::class),
            new ClassMap('LoginCredentialsResponse', Type\LoginCredentialsResponse::class),
            new ClassMap('Note', Type\Note::class),
            new ClassMap('OutlookIntegrationEmail', Type\OutlookIntegrationEmail::class),
            new ClassMap('Pledge', Type\Pledge::class),
            new ClassMap('CustomPaymentSchedule', Type\CustomPaymentSchedule::class),
            new ClassMap('StandardPaymentSchedule', Type\StandardPaymentSchedule::class),
            new ClassMap('RecurringGift', Type\RecurringGift::class),
            new ClassMap('RecurringGiftSchedule', Type\RecurringGiftSchedule::class),
            new ClassMap('Relationship', Type\Relationship::class),
            new ClassMap('RelationshipType', Type\RelationshipType::class),
            new ClassMap('SegmentedDonation', Type\SegmentedDonation::class),
            new ClassMap('SegmentedPledge', Type\SegmentedPledge::class),
            new ClassMap('ConnectRequest', Type\ConnectRequest::class),
            new ClassMap('ExternalLoginRequest', Type\ExternalLoginRequest::class),
            new ClassMap('CartOrderRequest', Type\CartOrderRequest::class),
            new ClassMap('PagedCartElementsResponse', Type\PagedCartElementsResponse::class),
            new ClassMap('PagedDefinedFieldsResponse', Type\PagedDefinedFieldsResponse::class),
            new ClassMap('PagedJournalEntriesResponse', Type\PagedJournalEntriesResponse::class),
            new ClassMap('PagedQueryResultsResponse', Type\PagedQueryResultsResponse::class),
            new ClassMap('PagedRelationshipsResponse', Type\PagedRelationshipsResponse::class),
            new ClassMap('CalendarItem', Type\CalendarItem::class),
            new ClassMap('Invitation', Type\Invitation::class),
            new ClassMap('RecurringSchedule', Type\RecurringSchedule::class),
            new ClassMap('CartCategory', Type\CartCategory::class),
            new ClassMap('CartImage', Type\CartImage::class),
            new ClassMap('CartParent', Type\CartParent::class),
            new ClassMap('PagedCartElementsRequest', Type\PagedCartElementsRequest::class),
            new ClassMap('CartItem', Type\CartItem::class),
            new ClassMap('CartItemDiscount', Type\CartItemDiscount::class),
            new ClassMap('Question', Type\Question::class),
            new ClassMap('DefinedField', Type\DefinedField::class),
            new ClassMap('DefinedFieldValue', Type\DefinedFieldValue::class),
            new ClassMap('CartPreferences', Type\CartPreferences::class),
            new ClassMap('StateTaxRate', Type\StateTaxRate::class),
            new ClassMap('TransactionProcessor', Type\TransactionProcessor::class),
            new ClassMap('PagedDefinedFieldsRequest', Type\PagedDefinedFieldsRequest::class),
            new ClassMap('DonorLoginPreferences', Type\DonorLoginPreferences::class),
            new ClassMap('DuplicateAccountSearch', Type\DuplicateAccountSearch::class),
            new ClassMap('DynamicQuery', Type\DynamicQuery::class),
            new ClassMap('QueryResultStats', Type\QueryResultStats::class),
            new ClassMap('PagedDynamicQueryResultsRequest', Type\PagedDynamicQueryResultsRequest::class),
            new ClassMap('SortOption', Type\SortOption::class),
            new ClassMap('EntityRole', Type\EntityRole::class),
            new ClassMap('Persona', Type\Persona::class),
            new ClassMap('PagedExistingQueryResultsRequest', Type\PagedExistingQueryResultsRequest::class),
            new ClassMap('Fund', Type\Fund::class),
            new ClassMap('PagedJournalEntriesRequest', Type\PagedJournalEntriesRequest::class),
            new ClassMap('JournalSummary', Type\JournalSummary::class),
            new ClassMap('PrivacyPreferences', Type\PrivacyPreferences::class),
            new ClassMap('PrivacyPreference', Type\PrivacyPreference::class),
            new ClassMap('OrganizationPreferences', Type\OrganizationPreferences::class),
            new ClassMap('PhoneAThonList', Type\PhoneAThonList::class),
            new ClassMap('Purchase', Type\Purchase::class),
            new ClassMap('PagedRelationshipsRequest', Type\PagedRelationshipsRequest::class),
            new ClassMap('SegmentedOrder', Type\SegmentedOrder::class),
            new ClassMap('Shipping', Type\Shipping::class),
            new ClassMap('Tax', Type\Tax::class),
            new ClassMap('LinkedTransaction', Type\LinkedTransaction::class),
            new ClassMap('AccountChangeRequest', Type\AccountChangeRequest::class),
            new ClassMap('CartOrderResponse', Type\CartOrderResponse::class),
            new ClassMap('EcommerceRequest', Type\EcommerceRequest::class),
            new ClassMap('EcommerceResponse', Type\EcommerceResponse::class),
            new ClassMap('ForgottenPasswordEmailHelpRequest', Type\ForgottenPasswordEmailHelpRequest::class),
            new ClassMap('ForgottenPasswordResetHelpRequest', Type\ForgottenPasswordResetHelpRequest::class),
            new ClassMap('ProcessTransactionRequest', Type\ProcessTransactionRequest::class),
            new ClassMap('SendEmailRequest', Type\SendEmailRequest::class),
        ]);
    }


}

